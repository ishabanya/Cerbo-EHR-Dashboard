"""Initial migration

Revision ID: 3e4aed80d21e
Revises: 
Create Date: 2025-09-16 17:19:05.891326

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3e4aed80d21e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', 'UNKNOWN', name='genderenum'), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_primary', sa.String(length=20), nullable=True),
    sa.Column('phone_secondary', sa.String(length=20), nullable=True),
    sa.Column('address_line_1', sa.String(length=255), nullable=True),
    sa.Column('address_line_2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('marital_status', sa.Enum('SINGLE', 'MARRIED', 'DIVORCED', 'WIDOWED', 'SEPARATED', 'UNKNOWN', name='maritalstatusenum'), nullable=True),
    sa.Column('social_security_number', sa.String(length=11), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=200), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact_relationship', sa.String(length=100), nullable=True),
    sa.Column('medical_record_number', sa.String(length=50), nullable=True),
    sa.Column('primary_language', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cerbo_patient_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patients_cerbo_patient_id'), 'patients', ['cerbo_patient_id'], unique=True)
    op.create_index(op.f('ix_patients_date_of_birth'), 'patients', ['date_of_birth'], unique=False)
    op.create_index(op.f('ix_patients_email'), 'patients', ['email'], unique=False)
    op.create_index(op.f('ix_patients_first_name'), 'patients', ['first_name'], unique=False)
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_index(op.f('ix_patients_is_active'), 'patients', ['is_active'], unique=False)
    op.create_index(op.f('ix_patients_last_name'), 'patients', ['last_name'], unique=False)
    op.create_index(op.f('ix_patients_medical_record_number'), 'patients', ['medical_record_number'], unique=True)
    op.create_index(op.f('ix_patients_phone_primary'), 'patients', ['phone_primary'], unique=False)
    op.create_table('providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('provider_type', sa.Enum('PHYSICIAN', 'NURSE_PRACTITIONER', 'PHYSICIAN_ASSISTANT', 'NURSE', 'THERAPIST', 'TECHNICIAN', 'SPECIALIST', 'CONSULTANT', name='providertypeenum'), nullable=False),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('npi_number', sa.String(length=10), nullable=True),
    sa.Column('dea_number', sa.String(length=20), nullable=True),
    sa.Column('specialties', sa.JSON(), nullable=True),
    sa.Column('board_certifications', sa.JSON(), nullable=True),
    sa.Column('languages_spoken', sa.JSON(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_primary', sa.String(length=20), nullable=True),
    sa.Column('phone_secondary', sa.String(length=20), nullable=True),
    sa.Column('office_address_line_1', sa.String(length=255), nullable=True),
    sa.Column('office_address_line_2', sa.String(length=255), nullable=True),
    sa.Column('office_city', sa.String(length=100), nullable=True),
    sa.Column('office_state', sa.String(length=50), nullable=True),
    sa.Column('office_zip_code', sa.String(length=10), nullable=True),
    sa.Column('office_phone', sa.String(length=20), nullable=True),
    sa.Column('default_appointment_duration', sa.Integer(), nullable=False),
    sa.Column('working_hours', sa.JSON(), nullable=True),
    sa.Column('availability_exceptions', sa.JSON(), nullable=True),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('hire_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'ON_LEAVE', 'RETIRED', name='providerstatusenum'), nullable=False),
    sa.Column('is_accepting_new_patients', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cerbo_provider_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_providers_cerbo_provider_id'), 'providers', ['cerbo_provider_id'], unique=True)
    op.create_index(op.f('ix_providers_email'), 'providers', ['email'], unique=False)
    op.create_index(op.f('ix_providers_employee_id'), 'providers', ['employee_id'], unique=True)
    op.create_index(op.f('ix_providers_first_name'), 'providers', ['first_name'], unique=False)
    op.create_index(op.f('ix_providers_id'), 'providers', ['id'], unique=False)
    op.create_index(op.f('ix_providers_last_name'), 'providers', ['last_name'], unique=False)
    op.create_index(op.f('ix_providers_license_number'), 'providers', ['license_number'], unique=False)
    op.create_index(op.f('ix_providers_npi_number'), 'providers', ['npi_number'], unique=True)
    op.create_index(op.f('ix_providers_status'), 'providers', ['status'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('appointment_date', sa.DateTime(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('appointment_type', sa.Enum('CONSULTATION', 'FOLLOW_UP', 'PHYSICAL_EXAM', 'PROCEDURE', 'EMERGENCY', 'TELEHEALTH', 'VACCINATION', 'LAB_WORK', 'IMAGING', 'THERAPY', name='appointmenttypeenum'), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CONFIRMED', 'CHECKED_IN', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'NO_SHOW', 'RESCHEDULED', name='appointmentstatusenum'), nullable=False),
    sa.Column('urgency', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='urgencyenum'), nullable=False),
    sa.Column('chief_complaint', sa.Text(), nullable=True),
    sa.Column('reason_for_visit', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('room_number', sa.String(length=20), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('is_telehealth', sa.Boolean(), nullable=False),
    sa.Column('telehealth_link', sa.String(length=500), nullable=True),
    sa.Column('scheduled_by', sa.String(length=100), nullable=True),
    sa.Column('check_in_time', sa.DateTime(), nullable=True),
    sa.Column('check_out_time', sa.DateTime(), nullable=True),
    sa.Column('actual_start_time', sa.DateTime(), nullable=True),
    sa.Column('actual_end_time', sa.DateTime(), nullable=True),
    sa.Column('estimated_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('copay_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('cerbo_appointment_id', sa.String(length=100), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.Column('recurring_pattern', sa.String(length=100), nullable=True),
    sa.Column('parent_appointment_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('cancellation_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['parent_appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_appointment_date'), 'appointments', ['appointment_date'], unique=False)
    op.create_index(op.f('ix_appointments_cerbo_appointment_id'), 'appointments', ['cerbo_appointment_id'], unique=True)
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_index(op.f('ix_appointments_patient_id'), 'appointments', ['patient_id'], unique=False)
    op.create_index(op.f('ix_appointments_provider_id'), 'appointments', ['provider_id'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_table('insurance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('insurance_type', sa.Enum('PRIMARY', 'SECONDARY', 'TERTIARY', name='insurancetypeenum'), nullable=False),
    sa.Column('coverage_status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'EXPIRED', 'CANCELLED', name='coveragestatusenum'), nullable=False),
    sa.Column('insurance_company', sa.String(length=200), nullable=False),
    sa.Column('insurance_plan_name', sa.String(length=200), nullable=True),
    sa.Column('insurance_plan_type', sa.String(length=100), nullable=True),
    sa.Column('policy_number', sa.String(length=100), nullable=False),
    sa.Column('group_number', sa.String(length=100), nullable=True),
    sa.Column('member_id', sa.String(length=100), nullable=False),
    sa.Column('subscriber_name', sa.String(length=200), nullable=True),
    sa.Column('subscriber_relationship', sa.String(length=50), nullable=True),
    sa.Column('subscriber_date_of_birth', sa.Date(), nullable=True),
    sa.Column('subscriber_gender', sa.String(length=20), nullable=True),
    sa.Column('subscriber_ssn', sa.String(length=11), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('termination_date', sa.Date(), nullable=True),
    sa.Column('deductible_individual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('deductible_family', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('deductible_met_individual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('deductible_met_family', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('out_of_pocket_max_individual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('out_of_pocket_max_family', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('out_of_pocket_met_individual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('out_of_pocket_met_family', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('copay_primary_care', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('copay_specialist', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('copay_urgent_care', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('copay_emergency_room', sa.Numeric(precision=6, scale=2), nullable=True),
    sa.Column('coinsurance_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('requires_referral', sa.Boolean(), nullable=True),
    sa.Column('requires_prior_auth', sa.Boolean(), nullable=True),
    sa.Column('customer_service_phone', sa.String(length=20), nullable=True),
    sa.Column('claims_address', sa.Text(), nullable=True),
    sa.Column('eligibility_status', sa.Enum('VERIFIED', 'PENDING', 'FAILED', 'EXPIRED', 'UNKNOWN', name='eligibilitystatusenum'), nullable=False),
    sa.Column('last_verification_date', sa.DateTime(), nullable=True),
    sa.Column('next_verification_date', sa.DateTime(), nullable=True),
    sa.Column('eligibility_response', sa.Text(), nullable=True),
    sa.Column('prior_auth_number', sa.String(length=100), nullable=True),
    sa.Column('prior_auth_expiration', sa.Date(), nullable=True),
    sa.Column('prior_auth_services', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cerbo_insurance_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_insurance_cerbo_insurance_id'), 'insurance', ['cerbo_insurance_id'], unique=True)
    op.create_index(op.f('ix_insurance_id'), 'insurance', ['id'], unique=False)
    op.create_index(op.f('ix_insurance_insurance_company'), 'insurance', ['insurance_company'], unique=False)
    op.create_index(op.f('ix_insurance_insurance_type'), 'insurance', ['insurance_type'], unique=False)
    op.create_index(op.f('ix_insurance_member_id'), 'insurance', ['member_id'], unique=False)
    op.create_index(op.f('ix_insurance_patient_id'), 'insurance', ['patient_id'], unique=False)
    op.create_index(op.f('ix_insurance_policy_number'), 'insurance', ['policy_number'], unique=False)
    op.create_table('billing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.Column('invoice_number', sa.String(length=50), nullable=True),
    sa.Column('claim_number', sa.String(length=50), nullable=True),
    sa.Column('transaction_type', sa.Enum('CHARGE', 'PAYMENT', 'ADJUSTMENT', 'REFUND', 'WRITE_OFF', name='transactiontypeenum'), nullable=False),
    sa.Column('service_date', sa.DateTime(), nullable=False),
    sa.Column('procedure_code', sa.String(length=10), nullable=True),
    sa.Column('procedure_description', sa.String(length=500), nullable=True),
    sa.Column('diagnosis_code', sa.String(length=10), nullable=True),
    sa.Column('diagnosis_description', sa.String(length=500), nullable=True),
    sa.Column('rendering_provider', sa.String(length=200), nullable=True),
    sa.Column('referring_provider', sa.String(length=200), nullable=True),
    sa.Column('facility', sa.String(length=200), nullable=True),
    sa.Column('charge_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('allowed_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('paid_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('adjustment_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('balance_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('primary_insurance_paid', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('secondary_insurance_paid', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('patient_responsibility', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'CHECK', 'CREDIT_CARD', 'DEBIT_CARD', 'BANK_TRANSFER', 'INSURANCE', 'OTHER', name='paymentmethodenum'), nullable=True),
    sa.Column('payment_reference', sa.String(length=100), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'SUBMITTED', 'PAID', 'PARTIALLY_PAID', 'DENIED', 'APPEALED', 'WRITTEN_OFF', 'REFUNDED', name='billingstatusenum'), nullable=False),
    sa.Column('submission_date', sa.DateTime(), nullable=True),
    sa.Column('processing_date', sa.DateTime(), nullable=True),
    sa.Column('denial_reason', sa.Text(), nullable=True),
    sa.Column('denial_code', sa.String(length=20), nullable=True),
    sa.Column('appeal_date', sa.DateTime(), nullable=True),
    sa.Column('appeal_reference', sa.String(length=100), nullable=True),
    sa.Column('authorization_number', sa.String(length=100), nullable=True),
    sa.Column('authorization_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.Column('follow_up_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('cerbo_billing_id', sa.String(length=100), nullable=True),
    sa.Column('clearinghouse_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_appointment_id'), 'billing', ['appointment_id'], unique=False)
    op.create_index(op.f('ix_billing_cerbo_billing_id'), 'billing', ['cerbo_billing_id'], unique=True)
    op.create_index(op.f('ix_billing_claim_number'), 'billing', ['claim_number'], unique=False)
    op.create_index(op.f('ix_billing_diagnosis_code'), 'billing', ['diagnosis_code'], unique=False)
    op.create_index(op.f('ix_billing_id'), 'billing', ['id'], unique=False)
    op.create_index(op.f('ix_billing_invoice_number'), 'billing', ['invoice_number'], unique=True)
    op.create_index(op.f('ix_billing_patient_id'), 'billing', ['patient_id'], unique=False)
    op.create_index(op.f('ix_billing_procedure_code'), 'billing', ['procedure_code'], unique=False)
    op.create_index(op.f('ix_billing_service_date'), 'billing', ['service_date'], unique=False)
    op.create_index(op.f('ix_billing_status'), 'billing', ['status'], unique=False)
    op.create_index(op.f('ix_billing_transaction_type'), 'billing', ['transaction_type'], unique=False)
    op.create_table('clinical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.Column('record_type', sa.Enum('CLINICAL_NOTE', 'VITAL_SIGNS', 'LAB_RESULT', 'IMAGING_RESULT', 'DIAGNOSIS', 'PRESCRIPTION', 'PROCEDURE_NOTE', 'PROGRESS_NOTE', 'DISCHARGE_SUMMARY', 'ALLERGY', 'IMMUNIZATION', name='recordtypeenum'), nullable=False),
    sa.Column('record_date', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('clinical_notes', sa.Text(), nullable=True),
    sa.Column('temperature', sa.Numeric(precision=4, scale=1), nullable=True),
    sa.Column('blood_pressure_systolic', sa.Integer(), nullable=True),
    sa.Column('blood_pressure_diastolic', sa.Integer(), nullable=True),
    sa.Column('heart_rate', sa.Integer(), nullable=True),
    sa.Column('respiratory_rate', sa.Integer(), nullable=True),
    sa.Column('oxygen_saturation', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('height', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('bmi', sa.Numeric(precision=4, scale=1), nullable=True),
    sa.Column('pain_scale', sa.Integer(), nullable=True),
    sa.Column('lab_test_name', sa.String(length=200), nullable=True),
    sa.Column('lab_result_value', sa.String(length=100), nullable=True),
    sa.Column('lab_result_unit', sa.String(length=50), nullable=True),
    sa.Column('lab_reference_range', sa.String(length=100), nullable=True),
    sa.Column('lab_abnormal_flag', sa.Boolean(), nullable=True),
    sa.Column('icd_10_code', sa.String(length=10), nullable=True),
    sa.Column('diagnosis_description', sa.Text(), nullable=True),
    sa.Column('diagnosis_status', sa.Enum('ACTIVE', 'INACTIVE', 'RESOLVED', 'CHRONIC', 'PENDING', name='statusenum'), nullable=True),
    sa.Column('diagnosis_severity', sa.Enum('LOW', 'MODERATE', 'HIGH', 'SEVERE', 'CRITICAL', name='severityenum'), nullable=True),
    sa.Column('onset_date', sa.DateTime(), nullable=True),
    sa.Column('resolution_date', sa.DateTime(), nullable=True),
    sa.Column('medication_name', sa.String(length=200), nullable=True),
    sa.Column('dosage', sa.String(length=100), nullable=True),
    sa.Column('frequency', sa.String(length=100), nullable=True),
    sa.Column('duration', sa.String(length=100), nullable=True),
    sa.Column('prescribing_instructions', sa.Text(), nullable=True),
    sa.Column('cpt_code', sa.String(length=10), nullable=True),
    sa.Column('procedure_description', sa.Text(), nullable=True),
    sa.Column('procedure_outcome', sa.Text(), nullable=True),
    sa.Column('allergen', sa.String(length=200), nullable=True),
    sa.Column('allergy_type', sa.String(length=100), nullable=True),
    sa.Column('allergy_severity', sa.Enum('LOW', 'MODERATE', 'HIGH', 'SEVERE', 'CRITICAL', name='severityenum'), nullable=True),
    sa.Column('allergy_reaction', sa.Text(), nullable=True),
    sa.Column('vaccine_name', sa.String(length=200), nullable=True),
    sa.Column('vaccine_manufacturer', sa.String(length=100), nullable=True),
    sa.Column('lot_number', sa.String(length=50), nullable=True),
    sa.Column('vaccination_site', sa.String(length=100), nullable=True),
    sa.Column('next_due_date', sa.DateTime(), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('is_confidential', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'RESOLVED', 'CHRONIC', 'PENDING', name='statusenum'), nullable=False),
    sa.Column('reviewed_by', sa.String(length=100), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('cerbo_record_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clinical_records_appointment_id'), 'clinical_records', ['appointment_id'], unique=False)
    op.create_index(op.f('ix_clinical_records_cerbo_record_id'), 'clinical_records', ['cerbo_record_id'], unique=True)
    op.create_index(op.f('ix_clinical_records_cpt_code'), 'clinical_records', ['cpt_code'], unique=False)
    op.create_index(op.f('ix_clinical_records_icd_10_code'), 'clinical_records', ['icd_10_code'], unique=False)
    op.create_index(op.f('ix_clinical_records_id'), 'clinical_records', ['id'], unique=False)
    op.create_index(op.f('ix_clinical_records_patient_id'), 'clinical_records', ['patient_id'], unique=False)
    op.create_index(op.f('ix_clinical_records_provider_id'), 'clinical_records', ['provider_id'], unique=False)
    op.create_index(op.f('ix_clinical_records_record_date'), 'clinical_records', ['record_date'], unique=False)
    op.create_index(op.f('ix_clinical_records_record_type'), 'clinical_records', ['record_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_clinical_records_record_type'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_record_date'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_provider_id'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_patient_id'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_id'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_icd_10_code'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_cpt_code'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_cerbo_record_id'), table_name='clinical_records')
    op.drop_index(op.f('ix_clinical_records_appointment_id'), table_name='clinical_records')
    op.drop_table('clinical_records')
    op.drop_index(op.f('ix_billing_transaction_type'), table_name='billing')
    op.drop_index(op.f('ix_billing_status'), table_name='billing')
    op.drop_index(op.f('ix_billing_service_date'), table_name='billing')
    op.drop_index(op.f('ix_billing_procedure_code'), table_name='billing')
    op.drop_index(op.f('ix_billing_patient_id'), table_name='billing')
    op.drop_index(op.f('ix_billing_invoice_number'), table_name='billing')
    op.drop_index(op.f('ix_billing_id'), table_name='billing')
    op.drop_index(op.f('ix_billing_diagnosis_code'), table_name='billing')
    op.drop_index(op.f('ix_billing_claim_number'), table_name='billing')
    op.drop_index(op.f('ix_billing_cerbo_billing_id'), table_name='billing')
    op.drop_index(op.f('ix_billing_appointment_id'), table_name='billing')
    op.drop_table('billing')
    op.drop_index(op.f('ix_insurance_policy_number'), table_name='insurance')
    op.drop_index(op.f('ix_insurance_patient_id'), table_name='insurance')
    op.drop_index(op.f('ix_insurance_member_id'), table_name='insurance')
    op.drop_index(op.f('ix_insurance_insurance_type'), table_name='insurance')
    op.drop_index(op.f('ix_insurance_insurance_company'), table_name='insurance')
    op.drop_index(op.f('ix_insurance_id'), table_name='insurance')
    op.drop_index(op.f('ix_insurance_cerbo_insurance_id'), table_name='insurance')
    op.drop_table('insurance')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_provider_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_patient_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_cerbo_appointment_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_appointment_date'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_providers_status'), table_name='providers')
    op.drop_index(op.f('ix_providers_npi_number'), table_name='providers')
    op.drop_index(op.f('ix_providers_license_number'), table_name='providers')
    op.drop_index(op.f('ix_providers_last_name'), table_name='providers')
    op.drop_index(op.f('ix_providers_id'), table_name='providers')
    op.drop_index(op.f('ix_providers_first_name'), table_name='providers')
    op.drop_index(op.f('ix_providers_employee_id'), table_name='providers')
    op.drop_index(op.f('ix_providers_email'), table_name='providers')
    op.drop_index(op.f('ix_providers_cerbo_provider_id'), table_name='providers')
    op.drop_table('providers')
    op.drop_index(op.f('ix_patients_phone_primary'), table_name='patients')
    op.drop_index(op.f('ix_patients_medical_record_number'), table_name='patients')
    op.drop_index(op.f('ix_patients_last_name'), table_name='patients')
    op.drop_index(op.f('ix_patients_is_active'), table_name='patients')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_index(op.f('ix_patients_first_name'), table_name='patients')
    op.drop_index(op.f('ix_patients_email'), table_name='patients')
    op.drop_index(op.f('ix_patients_date_of_birth'), table_name='patients')
    op.drop_index(op.f('ix_patients_cerbo_patient_id'), table_name='patients')
    op.drop_table('patients')
    # ### end Alembic commands ###